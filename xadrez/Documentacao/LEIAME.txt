------------------------------------------------------------------
    Arquivo LEIAME do Grupo CEV
------------------------------------------------------------------

Este documento fornece informações complementares ou posteriores para 
o trabalho 3 de INF1301 - Programação Modular e sua instalação.


-------------------------
COMO USAR ESTE DOCUMENTO
-------------------------

Para ver o arquivo Leiame.txt na tela no Bloco de Notas, maximize a 
janela do Bloco de Notas. No menu Formatar, clique em Quebra automática 
de linha. Para imprimir o Leiame.txt, abra-o no Bloco de Notas ou em 
outro processador de texto e, em seguida, utilize o comando Imprimir no 
menu Arquivo.


--------
SUMÁRIO
--------

REQUISITOS DO SISTEMA
REQUISITOS ADICIONAIS
INSTALAÇÃO
COMPILAÇÃO
TESTES
ESTRUTURA DE DIRETÓRIOS
COMO OBTER AJUDA
REPOSITÓRIO
REGRAS DE SINTAXE DOS ARQUIVOS DE DISPOSIÇÃO DE PEÇAS NO TABULEIRO
REGRAS DE SINTAXE DOS ARQUIVOS DE REGRAS DE MOVIMENTAÇÃO DISCRETA
REGRAS DE SINTAXE DOS ARQUIVOS DE REGRAS DE MOVIMENTAÇÃO CONTÍNUA
COMO JOGAR

----------------------
REQUISITOS DO SISTEMA
----------------------

  - Arcabouço de Testes devidamente instalado
  - Visual Studio 2005 ou 2008


----------------------
REQUISITOS ADICIONAIS
----------------------

Para suportar a correto funcionamento do programa execute o batch
vsvar32s.bat.  Execute-o sempre que uma nova janela de linha de 
comando for aberta

-----------
INSTALAÇÃO
-----------

O trabalho se encontra no arquivo INF1301-Trab03-CEV.zip . Para instalar
os módulos, é necessário extrair toda a pasta xadrez para o diretório on-
de o arqcabouço está instalado. Sendo assim, a pasta xadrez ficará loca-
lizada no mesmo diretório que as pastas arcabouc, documentos, ferramnt,ins-
trum, etc.

--------------------
COMPILAÇÃO
--------------------

Para gerar as bibliotecas, compilar os fontes e executar os testes, basta
executar o batch Tudo.bat encontrado no diretório "Batches". Este batch
limpa os arquivos gerados por execuções anteriores, cria a biblioteca, com-
pila os códigos-fonte e executa os testes.


--------------------
TESTES
--------------------

Foram implementados 5 módulos específicos de teste (um para cada módulo desenvolvido).
Tais módulos testam todas as funções exportadas dos módulos e com condições de retorno
bem especificadas. Algumas funções com retorno void não foram diretamente testadas mas
por serem invocadas por outras funções foi possível detectar e corrigir os problemas
nelas à partir do teste das funções que as invocaram.

Foram criados e fornecidos 5 scripts específicos de testes (um para cada módulo desenvolvido).
Tais scripts executam todas as funções de teste implementadas, buscando ainda gerar
casos que testem as mais variadas condições de retorno especificadas nas interfaces 
dos módulos. Para alterar os scripts de teste basta acessar o script específico dentro 
da pasta "Scripts". Após realizar as alterações que achar necessárias basta executar o
batch Tudo.bat que encontra-se no diretório "Batches".

Vale ressaltar ainda que uma breve explicação de cada comando de script de testes se 
encontra no respectivo módulo de teste. Tais arquivos se encontram no diretório Fontes 
sob a alcunha TESTxxx onde xxx corresponde ao prefixo do módulo implementado (VER-vértice, 
GRA-grafo, REC-movimentador, GER-gerenciador, PAR-partida).

É importante observar também que, para melhor testar o módulo movimentador é interessante
manipular os arquivos de disposição de peças no tabuleiro e de regras de definição.
Há tópicos abaixo que esclarecem como manipular esses arquivos de forma correta. Por essa
razão o script de testes do movimentador parece bem simples à primeira vista, mas a complexidade
dos testes evolui à medida que alteramos os arquivos de definição.

Os arquivos fornecidos já estão configurados de modo a testar os módulos gerenciador, partida e
movimentador e consequentemente realizar a disputa de uma partida. Para
testar outros módulos basta tirar o trecho REM das linhas to batch TestaTudo.bat .

-----------------------
ESTRUTURA DE DIRETÓRIOS
-----------------------

A seguir, encontra-se uma descrição dos diretórios do trabalho
-Batches - contém procedimentos para geração de bibliotecas, compilação e teste.
-Composição - contém os arquivos com as diretivas de geração de scripts de make
-Definicao - contém os arquivos de disposição de peças no tabuleiro e de regras
	de movimentação das peças
-Fontes - código dos módulos e interfaces
-Objetos - arquivos *.obj, *.lib e *.build
-Produto - arquivos executáveis, de log de teste e de log de compilação
-Scripts - scripts de teste


-----------
REPOSITÓRIO
-----------

Neste trabalho, utilizamos um serviço de repositório online. O projeto pode ser
visitado na URL: http://code.google.com/p/programacao-modular/

-----------------
COMO OBTER AJUDA
-----------------

Se tiver qualquer problema com este produto, entre em contato por email:
Eduardo Velloso	- eduardo.velloso@gmail.com
Caio D'Angelo	- caioluizdangelo@gmail.com
Vitor Barbarisi	- vitorbarbarisi@yahoo.com

--------------------------------------------------------------------------------
REGRAS DE SINTAXE DOS ARQUIVOS DE DISPOSIÇÃO DE PEÇAS NO TABULEIRO
--------------------------------------------------------------------------------
	
	Cada linha do arquivo especificará a posição de apenas uma peça do jogo.
	A sintaxe será <TipoDaPeça> <CorDaPeca> <Coluna> <Linha>
	
	Tipo da Peça:
		P - peão
		T - torre
		C - cavalo
		B - bispo
		D - dama
		R - rei

	Cor da Peça:
		B - branca
		P - preta

	Linha: Contada do topo para baixo, variando de 1 a 8

	Coluna: Contada da esquerda para a direita, variando de A a H

-----------------------------------------------------------------
REGRAS DE SINTAXE DOS ARQUIVOS DE REGRAS DE MOVIMENTAÇÃO DISCRETA
----------------------------------------------------------------- 

	Cada linha especificará as regras de movimentação de apenas uma peça do jogo.
	No entanto, mais de uma linha poderá especificar a movimentaçao de uma mesma peça.

	Movimentação Discreta (Coordenadas Quadradas)
	<TipoDaPeça> <TipoDaCasaDeDestino> <CasasNaHorizontal> <CasasNaVertical>

	Tipo da Peça:
		P - peão
		T - torre
		C - cavalo
		B - bispo
		D - dama
		R - rei

	Tipo da Casa de Destino:
		V - vazia
		C - cheia
		? - não importa

	Casas na Horizontal:
		valores positivos - número de casas para a direita
		valores negativos - número de casas para a esquerda

	Casas na Vertical:
		valores positivos - número de casas para frente
		valores negativos - número de casas para trás

-----------------------------------------------------------------
REGRAS DE SINTAXE DOS ARQUIVOS DE REGRAS DE MOVIMENTAÇÃO CONTÍNUA
----------------------------------------------------------------- 
	
	A primeira linha do arquivo conterá uma letra que indica a cor das peças do próximo jogador.
		B - branca
		P - preta

	Cada próxima linha especificará as regras de movimentação de apenas uma peça do jogo.
	No entanto, mais de uma linha poderá especificar a movimentaçao de uma mesma peça.
	
	Movimentação Contínua (Coordenadas Polares)
	<TipoDaPeça> <Direcao> <Casas>
 
	Tipo da Peça:
		P - peão
		T - torre
		C - cavalo
		B - bispo
		D - dama
		R - rei

	Direcao:
		NN - norte
		SS - sul
		EE - leste
		WW - oeste
		NE - nordeste
		NW - noroeste
		SE - sudeste
		SW - sudoeste

	Casas:
		0..9	- número máximo de casas que a peça pode andar nesta direção
		N 	- pode andar nesta direção até encontrar uma peça ou alcançar o fim do tabuleiro

-----------
COMO JOGAR
-----------

	No início do jogo há 3 opções - começar uma nova partida, continuar uma partida antiga e sair do jogo.
Escolha aquela de sua preferência, seguindo as instruções de entrada que aparecem no prompt. Após iniciar um
jogo (novo ou continuação) o jogo informa de que cor é a vez e imprime o tabuleiro com o estado atual do jogo.
Para ordenar uma movimentação basta informar a casa de origem e a casa de destino que se deseja efetuar o 
movimento. Cada casa é representada por sua linha e coluna com um número indicando a linha e uma letra indicando
a coluna. Tal correspondência está disponível no tabuleiro impresso na tela. 
	Por exemplo, um comando válido de movimentação (desde que as peças e regras assim o permitam) seria A1 A3. 
Nesse exemplo o movimento realizado seria a movimentação da peça que atualmente está na casa A1 para a casa A3. 
O jogo verifica se o movimento é válido e em caso positivo o executa. Em caso negativo informa ao usuário a 
situação e aguarda uma entrada válida para prosseguir.
	Foram disponibilizados também dois comandos especiais - salvar e sair. O primeiro salva o estado atual do 
jogo em um arquivo permitindo que seja retomado no futuro a partir daquele estado. O comando 'sair' aborta o jogo 
atual independente do estado do jogo e sem salvar o mesmo. Portanto se for desejo do jogador retomar o jogo no 
futuro é necessário executar o comando salvar antes de sair do jogo.
	O jogo prossegue alternando as cores da vez a cada jogada até que o usuário saia do jogo ou então que seja
identificada uma situação de xeque-mate. Nesse último caso o jogo termina informando o vencedor da partida e sugerindo
ao usuário que dispute uma nova partida.