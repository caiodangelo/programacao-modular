
!!! Inicio dos testes
!!!      Construto sob teste: ..\produto\testelista
!!!      Script de teste:     ..\scripts\testelista.script

!!!    0  Linha:     1  // Script:    TesteLista.script 
!!!    0  Linha:     2  // Autor:     Arndt von Staa 
!!!    0  Linha:     3  // Data:      02/abr/2008 
!!!    0  Linha:     4  // Propósito: Testar superficialmente o módulo lista genérica duplamente encadeada 
!!!    0  Linha:     5  // 
    7  == Inicializar valores
   28  == Iniciar contagem
   33  == Criar a lista 0
   36  == Verificar contadores, 1 deles já contou
cc>    1  Linha:    37   Contagem em "LIS_AvancarElementoCorrente" é zero.
cc>    2  Linha:    37   Contagem em "LIS_AvancarElementoCorrente - Chegou ao final da Lista, numElem < 0" é zero.
cc>    3  Linha:    37   Contagem em "LIS_AvancarElementoCorrente - Chegou ao final da Lista, numElem > 0" é zero.
cc>    4  Linha:    37   Contagem em "LIS_AvancarElementoCorrente - Esta no meio da Lista, numElem < 0" é zero.
cc>    5  Linha:    37   Contagem em "LIS_AvancarElementoCorrente - Esta no meio da Lista, numElem > 0" é zero.
cc>    6  Linha:    37   Contagem em "LIS_AvancarElementoCorrente - Lista Vazia" é zero.
cc>    7  Linha:    37   Contagem em "LIS_AvancarElementoCorrente - numElem Maior Que Zero" é zero.
cc>    8  Linha:    37   Contagem em "LIS_AvancarElementoCorrente - numElem é Menor Que Zero" é zero.
cc>    9  Linha:    37   Contagem em "LIS_DestruirLista" é zero.
cc>   10  Linha:    37   Contagem em "LIS_EsvaziarLista" é zero.
cc>   11  Linha:    37   Contagem em "LIS_ExcluirElemento" é zero.
cc>   12  Linha:    37   Contagem em "LIS_ExcluirElemento - Elemento nao tem antecessores" é zero.
cc>   13  Linha:    37   Contagem em "LIS_ExcluirElemento - Elemento nao tem sucessores" é zero.
cc>   14  Linha:    37   Contagem em "LIS_ExcluirElemento - Elemento tem antecessores" é zero.
cc>   15  Linha:    37   Contagem em "LIS_ExcluirElemento - Elemento tem sucessores" é zero.
cc>   16  Linha:    37   Contagem em "LIS_ExcluirElemento - Lista vazia" é zero.
cc>   17  Linha:    37   Contagem em "LIS_InserirElementoAntes" é zero.
cc>   18  Linha:    37   Contagem em "LIS_InserirElementoAntes - Elemento corrente NULL" é zero.
cc>   19  Linha:    37   Contagem em "LIS_InserirElementoAntes - Elemento na origem" é zero.
cc>   20  Linha:    37   Contagem em "LIS_InserirElementoAntes - Elemento no meio da lista" é zero.
cc>   21  Linha:    37   Contagem em "LIS_InserirElementoApos" é zero.
cc>   22  Linha:    37   Contagem em "LIS_InserirElementoApos - Elemento corrente NULL" é zero.
cc>   23  Linha:    37   Contagem em "LIS_InserirElementoApos - Elemento no fim" é zero.
cc>   24  Linha:    37   Contagem em "LIS_InserirElementoApos - Elemento no meio da lista" é zero.
cc>   25  Linha:    37   Contagem em "LIS_IrFinalLista" é zero.
cc>   26  Linha:    37   Contagem em "LIS_IrInicioLista" é zero.
cc>   27  Linha:    37   Contagem em "LIS_ObterValor" é zero.
cc>   28  Linha:    37   Contagem em "LIS_ObterValor - Lista Vazia" é zero.
cc>   29  Linha:    37   Contagem em "LIS_ProcurarValor" é zero.
cc>   30  Linha:    37   Contagem em "LIS_ProcurarValor - Lista vazia" é zero.
cc>   31  Linha:    37   Contagem em "LIS_ProcurarValor - Nao achou" é zero.
cc>   32  Linha:    37   Contagem em "LIS_ProcurarValor - Valor Encontrado" é zero.
<<<    0  Linha:    39  Falhas registradas eram esperadas e foram recuperadas. 
   41  == Verificar espaços alocados
   45  == Verificar ObterValor relativo a lista vazia
   48  == Verificar AvancarElementoCorrente relativo a lista vazia
   51  == Verificar Excluir elemento em lista vazia
   54  ==Verificar ProcurarValor em lista vazia
   57  == Inserir elemento em lista vazia
   61  == Inserir elemento antes do primeiro
   65  == Excluir elemento inserido
   69  == Inserir elemento após primeiro
   73  ==Verificar Procurar Ultimo Valor
   77  == Verificar Procurar Valor Inexistente
   83  ==Verificar percorrimento
   89  == Inserir elemento antes do último
   93  ==Verificar InserirApos elemento no meio da lista
   98  == Controlar vazamento de memória

!!!  Espaco de dados, id:     5  pValor: 00150B1A  hexa: 1A 0B 15 00  E' origem lista  Id suc:     3
     Id tipo valor: 2  Tamanho: 12  Ativo  Linha onde alocou: 722  Arquivo: ..\Fontes\lista.c
     Controle antes OK  Controle apos OK
          0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   0123456789ABCDEF
    000  D8 1F 15 00 DA 08 15 00 FA 09 15 00               Ø...Ú...ú...


!!!  Espaco de dados, id:     3  pValor: 001509FA  hexa: FA 09 15 00  Id ant:     5  Id suc:     1
     Id tipo valor: 2  Tamanho: 12  Ativo  Linha onde alocou: 722  Arquivo: ..\Fontes\lista.c
     Controle antes OK  Controle apos OK
          0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   0123456789ABCDEF
    000  C8 1F 15 00 1A 0B 15 00 00 00 00 00               È...........


!!!  Espaco de dados, id:     1  pValor: 001508DA  hexa: DA 08 15 00  Id ant:     3  Id suc:     0
     Id tipo valor: 2  Tamanho: 12  Ativo  Linha onde alocou: 722  Arquivo: ..\Fontes\lista.c
     Controle antes OK  Controle apos OK
          0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   0123456789ABCDEF
    000  B8 1F 15 00 00 00 00 00 1A 0B 15 00               ¸...........


!!!  Espaco de dados, id:     0  pValor: 00150812  hexa: 12 08 15 00  Id ant:     1  E' final lista
     Id tipo valor: 1  Tamanho: 20  Ativo  Linha onde alocou: 121  Arquivo: ..\Fontes\lista.c
     Controle antes OK  Controle apos OK
          0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   0123456789ABCDEF
    000  DA 08 15 00 FA 09 15 00 DA 08 15 00 03 00 00 00   Ú...ú...Ú.......
    010  20 1A 40 00                                        .@.

  103  == Excluir elemento do meio
  108  == Excluir elemento do início
  112  == Excluir elemento final, único
  116  == Ver se a lista ficou vazia
  119  == Destruir a lista
  122  == Criar uma lista com dois elementos
  127  == Esvaziar a lista e ver se ficou vazia
  131  == Destruir a lista
  134  == Criar uma lista com quatro elementos
  141  == Verificar a lista de trás para diante
  151  == Verificar a lista de frente para trás
  161  == Verificar a lista andando demais de trás para diante
  165  == Verificar a lista andando demais de frente para trás
  169  == Destruir a lista
  172  == Controlar vazamento de memória
  176  == Terminar controlar contadores
  181  == Terminar contagem
!!!    0  Linha:   184  // fim 

!!! Número de linhas lidas:         184
!!! Número de casos de teste:        36
!!! Número comandos corretos:       100
!!! Número de falhas encontradas:     0

!!! Não foram encontrados problemas


!!! Numero de espacos ainda alocados: 0
